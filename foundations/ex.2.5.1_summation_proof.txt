What is an appropriate loop invariant for the following program fragment, 
which sets sum equal to the sum of the integers from 1 to n?
Prove your loop invariant by induction on i, and use it to prove that the program works as intended.

(1) scanf ("%d", &n);          1
(2) sum = 0;                   1
(3) for (i = 1; i <= n; i++)   1, n+1, n-1
(4)     sum = sum + i          n
                               ------
                               3n + 3

loop invariant:
    Before the test of loop (3), for a value j of i: sum = j (j-1) / 2
    
basis: j = 1
    First time we enter the loop sum = 0

induction on i:
    Suppose we have a number j > 1 and sum(h) is true for 1<=h<=j. We' ll prove sum(j+1).
    Before the assignment (3) i=j, by the inductive hypothesis sum=j(j-1)/2, after it is
	sum=j(j-1)/2 + j = j(j+1)/2. Thus at the beginning of next iteration sum=j(j+1)/2
	therefore sum(j+1) is true.

After nth iteration the program terminates with sum = n(n+1)/2.
Thus it correctly evaluates that the sum of i from i = 1 to i = n equals n(n+1)/2.
